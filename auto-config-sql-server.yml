---
- name: Setup MySQL Server with Advanced Configuration and Security
  hosts: all
  become: yes
  tasks:
    - name: Instalar MySQL Server
      apt:
        name: mysql-server
        state: present
        update_cache: yes

    - name: Habilitar y arrancar MySQL
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Asegurar acceso root local sin password (solo para testing, deshabilitar en producción)
      mysql_user:
        name: root
        host: localhost
        password: ""
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present

    - name: Crear base de datos "testdb"
      mysql_db:
        name: testdb
        state: present

    - name: Crear tabla de prueba "users" en "testdb"
      mysql_query:
        query: |
          CREATE TABLE IF NOT EXISTS testdb.users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            email VARCHAR(100) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
        state: present

    - name: Insertar datos de prueba en la tabla "users"
      mysql_query:
        query: |
          INSERT INTO testdb.users (name, email)
          VALUES ('John Doe', 'john.doe@example.com'),
                  ('Jane Smith', 'jane.smith@example.com'),
                  ('Emily Johnson', 'emily.johnson@example.com');
        state: present

    - name: Crear usuario con acceso solo a base de datos específica
      mysql_user:
        name: "myuser"
        password: "securepassword"
        host: "%"
        priv: "testdb.*:ALL"
        state: present

    - name: Crear base de datos específica para el usuario
      mysql_db:
        name: mydb
        state: present

    - name: Crear usuario MySQL "mysql_user2" con permisos de lectura en la base de datos "testdb"
      mysql_user:
        name: "mysql_user2"
        password: "readpassword"
        host: "%"
        priv: "testdb.*:SELECT"
        state: present

    - name: Crear usuario MySQL "mysql_user3" con permisos de escritura en la base de datos "testdb"
      mysql_user:
        name: "mysql_user3"
        password: "writepassword"
        host: "%"
        priv: "testdb.*:INSERT,UPDATE"
        state: present

    - name: Configurar el firewall para permitir acceso SSH
      ufw:
        rule: allow
        name: "OpenSSH"
        port: 22

    - name: Habilitar y configurar el firewall para MySQL (puerto 3306)
      ufw:
        state: enabled
        rule: allow
        name: "MySQL"
        port: 3306

    - name: Instalar fail2ban para proteger MySQL contra ataques de fuerza bruta
      apt:
        name: fail2ban
        state: present

    - name: Crear grupo de acceso ACL para usuarios de MySQL
      user:
        name: mysqladmins
        state: present
        group: mysql

    - name: Configurar configuración de seguridad en MySQL
      mysql_variables:
        name: secure-file-priv
        value: "/var/lib/mysql-files"
        state: present

    - name: Configurar contraseña compleja para root (para producción)
      mysql_user:
        name: root
        host: localhost
        password: "ElAdmin1853"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present

    - name: Configurar MySQL para utilizar autenticación basada en plugins
      mysql_user:
        name: root
        host: localhost
        plugin: mysql_native_password
        state: present

    - name: Realizar un backup de la base de datos MySQL
      shell: mysqldump --all-databases > /var/backups/all_databases_$(date +'%Y-%m-%d').sql
      when: ansible_date_time.iso8601 | regex_search('^20[0-9]{2}-[0-9]{2}-[0-9]{2}')
      register: backup_result

    - name: Mostrar mensaje de éxito de backup
      debug:
        msg: "Backup realizado correctamente: {{ backup_result.stdout }}"

    - name: Configurar la auditoría para MySQL
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^audit_log'
        line: 'audit_log=FORCE_PLUS_PERMANENT'
      notify:
        - Restart MySQL

  handlers:
    - name: Restart MySQL
      service:
        name: mysql
        state: restarted
