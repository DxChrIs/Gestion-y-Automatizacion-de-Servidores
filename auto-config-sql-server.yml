---
- name: Setup MySQL Server with Advanced Configuration and Security
  hosts: all
  become: yes

  tasks:
    - name: Instalar PyMySQL para que Ansible pueda usar los módulos MySQL
      apt:
        name: python3-pymysql
        state: present
        update_cache: yes

    - name: Instalar MySQL Server
      apt:
        name: mysql-server
        state: present
        update_cache: yes

    - name: Habilitar y arrancar MySQL
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Configurar contraseña compleja y plugin para root (login con contraseña)
      mysql_user:
        name: root
        host: localhost
        password: "ElAdmin1853"
        plugin: mysql_native_password
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present

    - name: Crear base de datos "testdb"
      mysql_db:
        name: testdb
        state: present
        login_user: root
        login_password: "ElAdmin1853"

    - name: Crear tabla de prueba "users" en "testdb"
      mysql_query:
        query: |
          CREATE TABLE IF NOT EXISTS testdb.users (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(100) NOT NULL,
            email VARCHAR(100) NOT NULL,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          );
        login_user: root
        login_password: "ElAdmin1853"

    - name: Insertar datos de prueba en la tabla "users"
      mysql_query:
        query: |
          INSERT INTO testdb.users (name, email)
          VALUES ('John Doe', 'john.doe@example.com'),
                  ('Jane Smith', 'jane.smith@example.com'),
                  ('Emily Johnson', 'emily.johnson@example.com');
        login_user: root
        login_password: "ElAdmin1853"

    - name: Crear base de datos "mydb"
      mysql_db:
        name: mydb
        state: present
        login_user: root
        login_password: "ElAdmin1853"

    - name: Crear usuario con todos los privilegios en testdb
      mysql_user:
        name: myuser
        password: securepassword
        host: "%"
        priv: "testdb.*:ALL"
        state: present
        login_user: root
        login_password: "ElAdmin1853"

    - name: Crear usuario solo lectura en testdb
      mysql_user:
        name: mysql_user2
        password: readpassword
        host: "%"
        priv: "testdb.*:SELECT"
        state: present
        login_user: root
        login_password: "ElAdmin1853"

    - name: Crear usuario solo escritura en testdb
      mysql_user:
        name: mysql_user3
        password: writepassword
        host: "%"
        priv: "testdb.*:INSERT,UPDATE"
        state: present
        login_user: root
        login_password: "ElAdmin1853"

    - name: Instalar fail2ban
      apt:
        name: fail2ban
        state: present

    - name: Crear grupo de administración ACL para usuarios de MySQL
      group:
        name: mysqladmins
        state: present

    - name: Configurar archivo seguro para exportaciones en MySQL
      mysql_variables:
        variable: secure_file_priv
        value: "/var/lib/mysql-files"
        state: present
        login_user: root
        login_password: "ElAdmin1853"

    - name: Configurar UFW - permitir SSH
      ufw:
        rule: allow
        name: "OpenSSH"
        port: 22

    - name: Habilitar y permitir acceso al puerto 3306 (MySQL)
      ufw:
        state: enabled
        rule: allow
        port: 3306
        proto: tcp

    - name: Realizar backup completo de MySQL
      shell: mysqldump --all-databases > /var/backups/all_databases_$(date +'%Y-%m-%d').sql
      register: backup_result

    - name: Mostrar resultado del backup
      debug:
        msg: "Backup realizado correctamente."

    - name: Configurar auditoría básica en MySQL
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^#?audit_log'
        line: 'audit_log=FORCE_PLUS_PERMANENT'
      notify:
        - Restart MySQL

  handlers:
    - name: Restart MySQL
      service:
        name: mysql
        state: restarted